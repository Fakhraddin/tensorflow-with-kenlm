licenses(["notice"])

exports_files(["LICENSE"])

cc_library(
    name = "kenlm",
    #hdrs = [
    #  'lm/model.hh',
    #  'lm/bhiksha.hh',
    #  'lm/model_type.hh',
    #  'lm/trie.hh',
    #  'lm/weights.hh',
    #  'lm/word_index.hh',
    #  'util/bit_packing.hh',
    #  'util/sorted_uniform.hh',
    #  'lm/binary_format.hh',
    #  'lm/config.hh',
    #  'lm/lm_exception.hh',
    #  'util/exception.hh',
    #  'util/string_stream.hh',
    #  'util/fake_ostream.hh',
    #  'util/float_to_string.hh',
    #  'util/integer_to_string.hh',
    #  'util/string_piece.hh',
    #  'util/have.hh',
    #  'util/mmap.hh',
    #  'lm/read_arpa.hh',
    #  'util/file_piece.hh',
    #  'util/ersatz_progress.hh',
    #  'util/file.hh',
    #  'util/scoped.hh',
    #  'util/read_compressed.hh',
    #  'util/spaces.hh',
    #  'lm/facade.hh',
    #  'lm/virtual_interface.hh',
    #  'lm/return.hh',
    #  'lm/quantize.hh',
    #  'lm/blank.hh',
    #  'lm/max_order.hh',
    #  'lm/search_hashed.hh',
    #  'util/probing_hash_table.hh',
    #  'lm/search_trie.hh',
    #  'lm/state.hh',
    #  'util/murmur_hash.hh',
    #  'lm/value.hh',
    #  'lm/value_build.hh',
    #  'lm/vocab.hh',
    #  'lm/enumerate_vocab.hh',
    #  'util/file_stream.hh',
    #  'util/pool.hh',
    #  'util/double-conversion/bignum-dtoa.h',
    #  'util/double-conversion/bignum.h',
    #  'util/double-conversion/cached-powers.cc',
    #  'util/double-conversion/cached-powers.h',
    #  'util/double-conversion/diy-fp.h',
    #  'util/double-conversion/double-conversion.h',
    #  'util/double-conversion/fast-dtoa.h',
    #  'util/double-conversion/fixed-dtoa.h',
    #  'util/double-conversion/ieee.h',
    #  'util/double-conversion/strtod.h',
    #  'util/double-conversion/utils.h',
    #  'util/parallel_read.hh',
    #  'util/proxy_iterator.hh',
    #  'util/joint_sort.hh',
    #],
    hdrs = glob(['lm/*.hh', 'util/*.hh', 'util/double-conversion/*.h'],
                exclude = []),
    srcs = glob(['lm/*.cc', 'util/*.cc', 'util/double-conversion/*.cc'],
                exclude = ['*/*test.cc', '*/*main.cc']),
    #srcs = [
    #  'lm/binary_format.cc',
    #  'lm/config.cc',
    #  'lm/lm_exception.cc',
    #  'lm/model.cc',
    #  'lm/quantize.cc',
    #  'lm/read_arpa.cc',
    #  'lm/trie.cc',
    #  'lm/value_build.cc',
    #  'lm/virtual_interface.cc',
    #  'lm/vocab.cc',
    #  'util/bit_packing.cc',
    #  'util/ersatz_progress.cc',
    #  'util/exception.cc',
    #  'util/file.cc',
    #  'util/file_piece.cc',
    #  'util/float_to_string.cc',
    #  'util/integer_to_string.cc',
    #  'util/mmap.cc',
    #  'util/pool.cc',
    #  'util/read_compressed.cc',
    #  'util/scoped.cc',
    #  'util/spaces.cc',
    #  'util/string_piece.cc',
    #  'util/double-conversion/bignum-dtoa.cc',
    #  'util/double-conversion/bignum.cc',
    #  'util/double-conversion/cached-powers.cc',
    #  'util/double-conversion/diy-fp.cc',
    #  'util/double-conversion/double-conversion.cc',
    #  'util/double-conversion/fast-dtoa.cc',
    #  'util/double-conversion/fixed-dtoa.cc',
    #  'util/double-conversion/strtod.cc',
    #],
    includes = ['include'],
    defines = ['KENLM_MAX_ORDER=6'],
    copts = ['-std=c++03', '-fexceptions'],
    visibility = ["//visibility:public"],
)
